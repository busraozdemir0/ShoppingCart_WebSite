@page "/"

<PageTitle>Index</PageTitle>

<style>
    .column {
        float: left;
        padding: 15px;
    }

    .clearfix::after {
        content: "";
        clear: both;
        display: table;
    }

    .menu {
        width: 25%;
        margin-top: 10px;
        border: 1px outset #808080;
        border-radius: 7px;
        background: linear-gradient(-10deg, #ffd800, #808080, #23a6d5, #f5f542);
        color: black;
    }

    .content {
        width: 75%;
    }

    .menu ul {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }

    .menu li {
        padding: 8px;
        margin-bottom: 8px;
        color: black;
        background-color: white;
    }

        .menu li:hover {
            background-color: #e7e4e4;
            color: #808080;
        }

    .stuff {
        padding: 8px;
        margin: 1px;
        background-color: white;
        border: 1px outset black;
    }

    .add-to-cart {
        border: 1px outset #808080;
        width: 100%;
        background-color: #b6ff00;
    }
</style>

<div style="min-height:600px;">
    <div class="column menu">
        @if (categories == null)
        {
            <span>Loading...</span>
        }
        else
        {
            <div style="text-align:center;"><h5>Shopping List</h5></div>
            <ul>
                @foreach (var category in categories)
                {
                    <li style="cursor:pointer;" @onclick="(()=>LoadProductByCategory(category))">@category.Name</li>
                }
            </ul>
        }
    </div>
    <div class="column content">
        @if (products == null)
        {
            <span>Loading...</span>
        }
        else
        {
            <div class="container">
                <div style="padding:5px 0px 0px 0px; border-bottom:1px ridge black; margin-bottom:5px;">
                    <h5><i><u>@categoryName</u></i></h5>
                </div>
            </div>
            <div class="row">
                @foreach (var prod in products)
                {
                    <div class="col-md-4">
                        <div class="col-md-12 stuff">
                            <div style="width:100%; border-radius:2px; background-color:white;">
                                <button type="button" class="btn" style="border:2px #cff7f9 inset; width:100%;">@prod.Name</button>
                                <img src="http://localhost:5265/@prod.ImageUrl" style="width:100%; height:150px; border-radius:1px;" />

                                <div>
                                    Price:&nbsp;$ @prod.Price &nbsp; &nbsp; <span style="color:red;"> Stock:&nbsp;@prod.Stock</span>
                                </div>
                                @if (prod.CartFlag == true)
                                {
                                    <button type="button" class="btn add-to-cart" style="background-color:#ffd800;" @onclick="(()=> AddToCart_Click(prod))">Remove from Cart </button>
                                }
                                else
                                {
                                    <button type="button" class="btn add-to-cart" @onclick="(()=> AddToCart_Click(prod))">Add to Cart </button>

                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    public List<CategoryModel> categories { get; set; }
    public List<ProductModel> products { get; set; }
    public string categoryName = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await GetCategories();
    }

    private async Task GetCategories()
    {
        categories = await userPanelService.GetCategories();
        if (categories != null && categories.Count > 0)
        {
            await LoadProductByCategory(categories.FirstOrDefault());
        }
    }

    private async Task LoadProductByCategory(CategoryModel category)
    {
        categoryName = category.Name;
        products = await userPanelService.GetProductByCategoryId(category.Id);
    }

    private async Task AddToCart_Click(ProductModel productClicked)
    {

    }
}
